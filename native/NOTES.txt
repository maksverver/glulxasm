Contains some code from Glulxle (glkop.c) and Glk (gi_blorb.c) written by
Andrew Plotkin. See: http://eblong.com/zarf/{glulx,glk}/

-- 

Major missing features:
 - should load blorb at startup (for resources too)
 - saving/loading of game state in files
 - saving/loading of state for undoing

To figure out:
 - packaging; into four files:
    GLK-executable
    dynamic library containing native interpreter code
    dynamic library containing storyfile
    blorb file containing storyfile


Accelerated functions:
    8.7483%  func000939d4 (accel_func 1)
    7.1549%  func00093ace (accel_func 2)
    8.5797%  func00093179 (accel_func 3)
    1.3712%  func000931fd (accel_func 4)
    4.3512%  func000932ea (accel_func 5)
    2.7118%  func00092efb (accel_func 6)
    2.8420%  func00093287 (accel_func 7)


I've found some nice unittests on zarfs homepage. I don't expect to support
everything in this package, but at least here is a list of tests that fail:

glulxercise:
operand         passed
arith           passed
bitwise         passed
shift           8 failures
trunc           psased (2 failures with -fstrict-aliasing!)
extend          passed
aload           passed
astore          5 tests failed
arraybit        12 tests failed
call            passed
callstack       passed
jump            2 tests failed (jumpabs not supported)
jumpform        20 tests failed (indirect jump not supported)
compare         passed
stack           !crash!
strings         !crash!
iosys           !crash!
filter          !crash!
nullio          !crash!

memcopytest:
seems to work OK (no specific test cases given)
