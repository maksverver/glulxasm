# The table below is used by glulx-to-c.py to generated C code.

# mnemonic          parameters sizes    code
accelfunc           ll        44        native_accelfunc(a1,a2);
accelparam          ll        44        native_accelparam(a1,a2);
add                 lls       444       a3 = a1 + a2;
aload               lls       444       a3 = ((uint32_t*)&mem[a1])[a2];
aloadb              lls       444       a3 = mem[a1 + a2];
aloadbit            lls       444       a3 = mem[a1 + a2/8] >> (a2%8);
aloads              lls       444       a3 = ((uint16_t*)&mem[a1])[a2];
astore              lll       444       ((uint32_t*)(mem + a1))[a2] = a3;
astoreb             lll       444       mem[a1 + a2] = a3;
astorebit           lll       444       int x=a1+a2/8, j=a2%8; mem[x]=(mem[x]&~(1<<j))|((a3 != 0)<<(j));
astores             lll       444       ((uint16_t*)(mem + a1))[a2] = a3;
binarysearch        llllllls  44444444  a8 = native_binarysearch(a1,a2,a3,a4,a5,a6,a7);
bitand              lls       444       a3 = a1&a2;
bitnot              ls        44        a2 = ~a1;
bitor               lls       444       a3 = a1|a2;
call                lls       444       *sp = a2; a3 = func(a1)(sp); sp -= a2;
callf               ls        44        *sp = 0; a2 = func(a1)(sp);
callfi              lls       444       *sp++ = a2; *sp = 1; a3 = func(a1)(sp); sp -= 1;
callfii             llls      4444      *sp++ = a3; *sp++ = a2; *sp = 2; a4 = func(a1)(sp); sp -= 2;
callfiii            lllls     44444     *sp++ = a4; *sp++ = a3; *sp++ = a2; *sp = 3; a5 = func(a1)(sp); sp -= 3;
copy                ls        44        a2 = a1;
copyb               ls        11        a2 = a1;
div                 lls       444       a3 = (uint32_t)((int32_t)a1 / (int32_t)a2);
gestalt             lls       444       a3 = native_gestalt(a1, a2);
getmemsize          s         4         a1 = native_getmemsize();
glk                 lls       444       a3 = native_glk(a1, a2, &sp);
jeq                 llb       44-       if (a1 == a2) goto a3;
jge                 llb       44-       if ((int32_t)a1 >= (int32_t)a2) goto a3;
jgeu                llb       44-       if (a1 >= a2) goto a3;
jgt                 llb       44-       if ((int32_t)a1 > (int32_t)a2) goto a3;
jgtu                llb       44-       if (a1 > a2) goto a3;
jle                 llb       44-       if ((int32_t)a1 <= (int32_t)a2) goto a3;
jleu                llb       44-       if (a1 <= a2) goto a3;
jlt                 llb       44-       if ((int32_t)a1 < (int32_t)a2) goto a3;
jltu                llb       44-       if (a1 < a2) goto a3;
jne                 llb       44-       if (a1 != a2) goto a3;
jnz                 lb        4-        if (a1 != 0) goto a2;
jump                b         -         goto a1;
jz                  lb        4-        if (a1 == 0) goto a2;
malloc              ls        44        a2 = native_malloc(a1);
mfree               l         4         native_free(a1);
mod                 lls       444       a3 = (uint32_t)((int32_t)a1 / (int32_t)a2);
mul                 lls       444       a3 = a1 * a2;
neg                 ls        44        a2 = -a1;
nop                 -         -         ;
quit                -         -         native_quit();
random              ls        44        a2 = (uint32_t)native_random((int32_t)a1);
restart             -         -         native_restart();
restore             ls        44        a2 = native_restore(a1);
restoreundo         s         4         a1 = native_restoreundo();
ret                 l         4         return a1;
save                ls        44        a2 = native_save(a1);
saveundo            s         4         a1 = native_saveundo();
setiosys            ll        44        native_setiosys(a1, a2);
setrandom           l         4         native_setrandom(a1);
shiftl              lls       444       a3 = (a2 < 32) ? (a1 << a2) : 0;
stkcopy             l         4         native_stkcopy(a1);
stkroll             ll        44        native_stkroll(a1, a2);
streamchar          l         4         native_streamchar(a1);
streamnum           l         4         native_streamnum((int32_t)a1);
streamstr           l         4         native_streamstr(a1);
sub                 lls       444       a3 = a1 - a2;
ushiftr             lls       444       a3 = (a2 < 32) ? (a1 >> a2) : 0;
verify              s         4         a1 = native_verify();
